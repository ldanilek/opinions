import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useQuery, useMutation } from '../convex/_generated/react'
import { useCallback, useState, useEffect } from 'react'

interface SelectorProps {
  opinion: string | null;
  selectedOpinion: (opinion: string) => void;
};

const OpinionSelector = (props: SelectorProps) => {
  const listOpinions = useQuery('listOpinions') ?? [];
  useEffect(() => {
    if (!props.opinion && listOpinions.length > 0) {
      props.selectedOpinion(listOpinions[0].opinion);
    }
  }, [props, listOpinions]);

  return (
    <div className={styles.description}>
    {"Select an opinion:"} 
    <select value={props.opinion ?? ""} onChange={(e) => props.selectedOpinion(e.target.value)}>
    {listOpinions.map((opinion: any, i: number) => <option key={i} value={opinion.opinion}>{opinion.opinion}</option>)}
    </select>
    </div>
    );
};

interface CreatorProps {
  createdOpinion: (opinion: string) => void;
}

const OpinionCreator = (props: CreatorProps) => {
  const createOpinion = useMutation('createOpinion');
  const [opinion, setOpinion] = useState("");

  return (
    <div className={styles.description}>
    {"Create a new opinion:"}
    <input type="text" value={opinion} onChange={(e) => setOpinion(e.target.value)} />
    <button onClick={() => {
      createOpinion(opinion);
      props.createdOpinion(opinion);
    }}>Create</button>
    </div>
    );
};

interface ViewerProps {
  opinion: string | null;
}

const OpinionViewer = (props: ViewerProps) => {
  const opinionDoc = useQuery('getOpinion', props.opinion) ?? {};
  const agree = useMutation('agreeWithOpinion');
  const disagree = useMutation('disagreeWithOpinion');
  if (!props.opinion) {
    return null;
  }
  let fraction = opinionDoc.allVotes ? (opinionDoc.agree/opinionDoc.allVotes) : 0.5;
  return (
    <div>
    <h2>{props.opinion}</h2>
    <p><button onClick={() => agree(props.opinion)}>Agree</button><button onClick={() => disagree(props.opinion)}>Disagree</button></p>
    <div className="slidecontainer">
    <input type="range" min="0" max="100" value={100 * fraction} className="slider" id="myRange" readOnly={true} />
    </div>
    </div>
    );
}

const Home: NextPage = () => {
  const [opinion, setOpinion] = useState<null | string>(null);

  return (
    <div className={styles.container}>
      <Head>
        <title>Next.js with Convex</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
        {"Express your Opinions"}
        </h1>

        <OpinionSelector opinion={opinion} selectedOpinion={setOpinion} />
        <OpinionViewer opinion={opinion} />
        <OpinionCreator createdOpinion={setOpinion} />
      </main>

      <footer className={styles.footer}>
        <a
          href="https://www.convex.dev/"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/convex.svg" alt="Convex Logo" width={90} height={18} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
